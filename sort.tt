int[] MergeSort(int a[])
	if a.length() == 1 ; return a
	int pol = a.length()/2
	int a1[pol]
	for i in (0, pol)
		a1[i] = a[i]
	int pol2 = a.length() - pol
	int a2[pol2]
	pol++;
	for i in (pol,a.length())
		a2[i-pol] = a[i]
	int b1[pol] = MergeSort(a1)
	int b2[pol2] = MergeSort(a2)
	int k1 = 0;
	int k2 = 0;
	int k = 0;
	while k1 < pol && k2 < pol2
		if a1[k1] < a2[k2]
			a[k] = a1[k1]
			k1++
			k++
		else
			a[k] = a2[k2]
			k2++
			k++
	while k1 < pol
		a[k] = a1[k1]
		k1++
		k++
	while k2 < [pol2]
		a[k] = a2[k2]
		k2++
		k++
	return a

int main()
	int n = readInt()
	int a[n]
	for i in (0,n)
		a[i] = readInt();

	int b[n] = MergeSort(a);

	for i in (0,n)
		writeInt(b[i])

	return 0;
