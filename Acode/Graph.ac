extern def void print(int i);
extern def void read(int i);

def void dfs(int i,int[] visited,int n,int[][] adjMatrix){
   int j;
   visited[i] := true;
      for ( int j := 0; j < n; j+=1){
	 if (adjMatrix[i][j] > 0 and visited[j]==false ){
            dfs(j,visited,n,adjMatrix);
	 }
      }
}

def void initializeMatrix(int[][] a,int n){	
   for (int i := 0; i < n; i+=1 ){
      for (int j := 0; j < n; j+=1 ){
         a[i][j]:=0;
      }
   }
}

def void readmartix(int[][] a,int x,int y){	
   a[x][y]:=1;
   a[y][x]:=1;
}

def void main(){
   int n;
   int m;
   read(n);
   read(m);
   int[n][m] a;

   initializeMatrix(a,n);

   int x;
   int y;
   for (int i := 0; i < m; i+=1 ){
      read(x);
      read(y);
      readmartix(a,x,y);
   }
   
   bool visited[n];
   for (int i := 0; i < n; i+=1 ){
      visited[i]:=false;
   }
   dfs(0,visited,n,a);
    
   bool connected:=true;
   for (int i := 0; i < n; i+=1 ){
      if(visited[i]==false){
          connected:=false;
          break; 
      }
   }
    
   print(connected);

}

