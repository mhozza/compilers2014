int[] mergeSort(int a[]) {

	if sizeArrayInt(a) == 1 ; return a

	int pol = sizeArrayInt(a)/2

	int a1[pol]
	for i in (0, pol) {
		a1[i] = a[i]
	}

	int pol2 = sizeArrayInt(a) - pol
	int a2[pol2]
	pol = pol
	for i in (pol,sizeArrayInt(a)) {
		a2[i-pol] = a[i]
	}

	int b1[]
	b1 = mergeSort(a1)
	int b2[]
	b2 = mergeSort(a2)

	int k1 = 0
	int k2 = 0
	int k = 0
	while (k1 < pol) && (k2 < pol2) {
		if b1[k1] < b2[k2] {
			a[k] = b1[k1]
			k1 = k1 + 1
			k = k + 1
		} else {
			a[k] = b2[k2]
			k2 = k2 + 1
			k = k + 1
		}
	}
	while k1 < pol {
		a[k] = b1[k1]
		k1 = k1 + 1
		k = k + 1
	}
	while k2 < pol2 {
		a[k] = b2[k2]
		k2 = k2 + 1
		k = k + 1
	}

	return a
}

int main() {
	int n = readInt()
	int a[n]
	for i in (0,n) {
		a[i] = readInt()
	}


	int b[]
	b = mergeSort(a)

	for i in (0,n) {
		printInt(b[i])
	}

	return 0
}
