// Generated from teetee.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class teeteeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, IF=6, ELIF=7, ELSE=8, FOR=9, IN=10, 
		DO=11, WHILE=12, RETURN=13, BREAK=14, CONTINUE=15, OPEN_PAR=16, CLOSE_PAR=17, 
		LBRACK=18, RBRACK=19, LBRACE=20, RBRACE=21, COMMA=22, SEMICOLON=23, ASSIGN=24, 
		ADD=25, SUB=26, MUL=27, DIV=28, MOD=29, EXP=30, AND=31, OR=32, NOT=33, 
		EQ=34, NE=35, LT=36, LE=37, GT=38, GE=39, VOID=40, INT=41, FLOAT=42, BOOL=43, 
		STRING=44, CHAR=45, NEWLINE=46, WHITESPACE=47, COMMENT=48, ID=49, DIGIT=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'"
	};
	public static final String[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "IF", "ELIF", "ELSE", "FOR", "IN", 
		"DO", "WHILE", "RETURN", "BREAK", "CONTINUE", "OPEN_PAR", "CLOSE_PAR", 
		"LBRACK", "RBRACK", "LBRACE", "RBRACE", "COMMA", "SEMICOLON", "ASSIGN", 
		"ADD", "SUB", "MUL", "DIV", "MOD", "EXP", "AND", "OR", "NOT", "EQ", "NE", 
		"LT", "LE", "GT", "GE", "VOID", "INT", "FLOAT", "BOOL", "STRING", "CHAR", 
		"NEWLINE", "WHITESPACE", "COMMENT", "ID", "NUMBER", "DIGIT"
	};


	public teeteeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "teetee.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u014c\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30"+
		"\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37"+
		"\3\37\3 \3 \3 \3 \3 \5 \u00db\n \3!\3!\3!\3!\5!\u00e1\n!\3\"\3\"\3\"\3"+
		"\"\5\"\u00e7\n\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3&\3&\5&\u00f5\n&\3\'\3"+
		"\'\3(\3(\3(\3(\5(\u00fd\n(\3)\3)\3)\3)\3)\3*\3*\3+\3+\3+\6+\u0109\n+\r"+
		"+\16+\u010a\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u0116\n,\3-\3-\3-\7-\u011b\n"+
		"-\f-\16-\u011e\13-\3-\3-\3.\3.\3.\3.\3/\5/\u0127\n/\3/\3/\5/\u012b\n/"+
		"\3\60\3\60\3\60\3\60\3\61\3\61\7\61\u0133\n\61\f\61\16\61\u0136\13\61"+
		"\3\61\3\61\3\62\3\62\7\62\u013c\n\62\f\62\16\62\u013f\13\62\3\63\3\63"+
		"\3\63\7\63\u0144\n\63\f\63\16\63\u0147\13\63\5\63\u0149\n\63\3\64\3\64"+
		"\2\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17"+
		"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35"+
		"9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\2g\64\3\2"+
		"\n\3\2$$\3\2))\4\2\13\13\"\"\4\2\f\f\17\17\4\2C\\c|\5\2\62;C\\c|\3\2\63"+
		";\3\2\62;\u0159\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2"+
		"_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5p\3\2\2\2\7u\3"+
		"\2\2\2\ty\3\2\2\2\13\177\3\2\2\2\r\u0084\3\2\2\2\17\u0087\3\2\2\2\21\u008c"+
		"\3\2\2\2\23\u0091\3\2\2\2\25\u0095\3\2\2\2\27\u0098\3\2\2\2\31\u009b\3"+
		"\2\2\2\33\u00a1\3\2\2\2\35\u00a8\3\2\2\2\37\u00ae\3\2\2\2!\u00b7\3\2\2"+
		"\2#\u00b9\3\2\2\2%\u00bb\3\2\2\2\'\u00bd\3\2\2\2)\u00bf\3\2\2\2+\u00c1"+
		"\3\2\2\2-\u00c3\3\2\2\2/\u00c5\3\2\2\2\61\u00c7\3\2\2\2\63\u00c9\3\2\2"+
		"\2\65\u00cb\3\2\2\2\67\u00cd\3\2\2\29\u00cf\3\2\2\2;\u00d1\3\2\2\2=\u00d3"+
		"\3\2\2\2?\u00da\3\2\2\2A\u00e0\3\2\2\2C\u00e6\3\2\2\2E\u00e8\3\2\2\2G"+
		"\u00eb\3\2\2\2I\u00ee\3\2\2\2K\u00f4\3\2\2\2M\u00f6\3\2\2\2O\u00fc\3\2"+
		"\2\2Q\u00fe\3\2\2\2S\u0103\3\2\2\2U\u0105\3\2\2\2W\u0115\3\2\2\2Y\u0117"+
		"\3\2\2\2[\u0121\3\2\2\2]\u012a\3\2\2\2_\u012c\3\2\2\2a\u0130\3\2\2\2c"+
		"\u0139\3\2\2\2e\u0148\3\2\2\2g\u014a\3\2\2\2ij\7u\2\2jk\7v\2\2kl\7t\2"+
		"\2lm\7k\2\2mn\7p\2\2no\7i\2\2o\4\3\2\2\2pq\7e\2\2qr\7j\2\2rs\7c\2\2st"+
		"\7t\2\2t\6\3\2\2\2uv\7k\2\2vw\7p\2\2wx\7v\2\2x\b\3\2\2\2yz\7h\2\2z{\7"+
		"n\2\2{|\7q\2\2|}\7c\2\2}~\7v\2\2~\n\3\2\2\2\177\u0080\7d\2\2\u0080\u0081"+
		"\7q\2\2\u0081\u0082\7q\2\2\u0082\u0083\7n\2\2\u0083\f\3\2\2\2\u0084\u0085"+
		"\7k\2\2\u0085\u0086\7h\2\2\u0086\16\3\2\2\2\u0087\u0088\7g\2\2\u0088\u0089"+
		"\7n\2\2\u0089\u008a\7k\2\2\u008a\u008b\7h\2\2\u008b\20\3\2\2\2\u008c\u008d"+
		"\7g\2\2\u008d\u008e\7n\2\2\u008e\u008f\7u\2\2\u008f\u0090\7g\2\2\u0090"+
		"\22\3\2\2\2\u0091\u0092\7h\2\2\u0092\u0093\7q\2\2\u0093\u0094\7t\2\2\u0094"+
		"\24\3\2\2\2\u0095\u0096\7k\2\2\u0096\u0097\7p\2\2\u0097\26\3\2\2\2\u0098"+
		"\u0099\7f\2\2\u0099\u009a\7q\2\2\u009a\30\3\2\2\2\u009b\u009c\7y\2\2\u009c"+
		"\u009d\7j\2\2\u009d\u009e\7k\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7g\2\2"+
		"\u00a0\32\3\2\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7"+
		"v\2\2\u00a4\u00a5\7w\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7p\2\2\u00a7\34"+
		"\3\2\2\2\u00a8\u00a9\7d\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab\7g\2\2\u00ab"+
		"\u00ac\7c\2\2\u00ac\u00ad\7m\2\2\u00ad\36\3\2\2\2\u00ae\u00af\7e\2\2\u00af"+
		"\u00b0\7q\2\2\u00b0\u00b1\7p\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7k\2\2"+
		"\u00b3\u00b4\7p\2\2\u00b4\u00b5\7w\2\2\u00b5\u00b6\7g\2\2\u00b6 \3\2\2"+
		"\2\u00b7\u00b8\7*\2\2\u00b8\"\3\2\2\2\u00b9\u00ba\7+\2\2\u00ba$\3\2\2"+
		"\2\u00bb\u00bc\7]\2\2\u00bc&\3\2\2\2\u00bd\u00be\7_\2\2\u00be(\3\2\2\2"+
		"\u00bf\u00c0\7}\2\2\u00c0*\3\2\2\2\u00c1\u00c2\7\177\2\2\u00c2,\3\2\2"+
		"\2\u00c3\u00c4\7.\2\2\u00c4.\3\2\2\2\u00c5\u00c6\7=\2\2\u00c6\60\3\2\2"+
		"\2\u00c7\u00c8\7?\2\2\u00c8\62\3\2\2\2\u00c9\u00ca\7-\2\2\u00ca\64\3\2"+
		"\2\2\u00cb\u00cc\7/\2\2\u00cc\66\3\2\2\2\u00cd\u00ce\7,\2\2\u00ce8\3\2"+
		"\2\2\u00cf\u00d0\7\61\2\2\u00d0:\3\2\2\2\u00d1\u00d2\7\'\2\2\u00d2<\3"+
		"\2\2\2\u00d3\u00d4\7`\2\2\u00d4>\3\2\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7"+
		"\7p\2\2\u00d7\u00db\7f\2\2\u00d8\u00d9\7(\2\2\u00d9\u00db\7(\2\2\u00da"+
		"\u00d5\3\2\2\2\u00da\u00d8\3\2\2\2\u00db@\3\2\2\2\u00dc\u00dd\7q\2\2\u00dd"+
		"\u00e1\7t\2\2\u00de\u00df\7~\2\2\u00df\u00e1\7~\2\2\u00e0\u00dc\3\2\2"+
		"\2\u00e0\u00de\3\2\2\2\u00e1B\3\2\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4\7"+
		"q\2\2\u00e4\u00e7\7v\2\2\u00e5\u00e7\7#\2\2\u00e6\u00e2\3\2\2\2\u00e6"+
		"\u00e5\3\2\2\2\u00e7D\3\2\2\2\u00e8\u00e9\7?\2\2\u00e9\u00ea\7?\2\2\u00ea"+
		"F\3\2\2\2\u00eb\u00ec\7#\2\2\u00ec\u00ed\7?\2\2\u00edH\3\2\2\2\u00ee\u00ef"+
		"\7>\2\2\u00efJ\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1\u00f5\7?\2\2\u00f2\u00f3"+
		"\7?\2\2\u00f3\u00f5\7>\2\2\u00f4\u00f0\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f5"+
		"L\3\2\2\2\u00f6\u00f7\7@\2\2\u00f7N\3\2\2\2\u00f8\u00f9\7@\2\2\u00f9\u00fd"+
		"\7?\2\2\u00fa\u00fb\7>\2\2\u00fb\u00fd\7?\2\2\u00fc\u00f8\3\2\2\2\u00fc"+
		"\u00fa\3\2\2\2\u00fdP\3\2\2\2\u00fe\u00ff\7x\2\2\u00ff\u0100\7q\2\2\u0100"+
		"\u0101\7k\2\2\u0101\u0102\7f\2\2\u0102R\3\2\2\2\u0103\u0104\5e\63\2\u0104"+
		"T\3\2\2\2\u0105\u0106\5e\63\2\u0106\u0108\7\60\2\2\u0107\u0109\5g\64\2"+
		"\u0108\u0107\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u0108\3\2\2\2\u010a\u010b"+
		"\3\2\2\2\u010bV\3\2\2\2\u010c\u010d\7v\2\2\u010d\u010e\7t\2\2\u010e\u010f"+
		"\7w\2\2\u010f\u0116\7g\2\2\u0110\u0111\7h\2\2\u0111\u0112\7c\2\2\u0112"+
		"\u0113\7n\2\2\u0113\u0114\7u\2\2\u0114\u0116\7g\2\2\u0115\u010c\3\2\2"+
		"\2\u0115\u0110\3\2\2\2\u0116X\3\2\2\2\u0117\u011c\7$\2\2\u0118\u011b\n"+
		"\2\2\2\u0119\u011b\5]/\2\u011a\u0118\3\2\2\2\u011a\u0119\3\2\2\2\u011b"+
		"\u011e\3\2\2\2\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u011f\3\2"+
		"\2\2\u011e\u011c\3\2\2\2\u011f\u0120\7$\2\2\u0120Z\3\2\2\2\u0121\u0122"+
		"\7)\2\2\u0122\u0123\n\3\2\2\u0123\u0124\7)\2\2\u0124\\\3\2\2\2\u0125\u0127"+
		"\7\17\2\2\u0126\u0125\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0128\3\2\2\2"+
		"\u0128\u012b\7\f\2\2\u0129\u012b\7\17\2\2\u012a\u0126\3\2\2\2\u012a\u0129"+
		"\3\2\2\2\u012b^\3\2\2\2\u012c\u012d\t\4\2\2\u012d\u012e\3\2\2\2\u012e"+
		"\u012f\b\60\2\2\u012f`\3\2\2\2\u0130\u0134\7%\2\2\u0131\u0133\n\5\2\2"+
		"\u0132\u0131\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135"+
		"\3\2\2\2\u0135\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0138\b\61\2\2"+
		"\u0138b\3\2\2\2\u0139\u013d\t\6\2\2\u013a\u013c\t\7\2\2\u013b\u013a\3"+
		"\2\2\2\u013c\u013f\3\2\2\2\u013d\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e"+
		"d\3\2\2\2\u013f\u013d\3\2\2\2\u0140\u0149\7\62\2\2\u0141\u0145\t\b\2\2"+
		"\u0142\u0144\5g\64\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143"+
		"\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0148"+
		"\u0140\3\2\2\2\u0148\u0141\3\2\2\2\u0149f\3\2\2\2\u014a\u014b\t\t\2\2"+
		"\u014bh\3\2\2\2\22\2\u00da\u00e0\u00e6\u00f4\u00fc\u010a\u0115\u011a\u011c"+
		"\u0126\u012a\u0134\u013d\u0145\u0148\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}