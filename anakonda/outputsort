declare i32 @printInt(i32)
declare i32 @readInt()
declare i8* @createArrayInt (i32)
declare void @setArrayItemInt (i8*, i32, i32)
declare i32 @getArrayItemInt (i8*, i32)
declare i8* @mergeArraysInt (i8*, i8*)
declare i8* @multiplyArrayInt (i8*, i32)
declare i32 @sizeArrayInt (i8*)
declare i32 @iexp(i32, i32)
define i32 @main() {
start:
%R0 = call i32 @readInt ()
%R1 = alloca i32
store i32 %R0, i32* %R1
%R2 = load i32* %R1
%R3 = add i32 0, 1
%R4 = sub i32 %R2, %R3
store i32 %R4, i32* %R1
%R5 = call i32 @readInt ()
%R6 = alloca i32
store i32 %R5, i32* %R6
%R7 = load i32* %R6
%R8 = call i8* @createArrayInt(i32 1)
call void @setArrayItemInt(i8* %R8, i32 0, i32 %R7)
%R9 = alloca i8*
store i8* %R8, i8** %R9
%R10 = add i32 0, 1
%R11 = alloca i32
store i32 %R10, i32* %R11
br label %L0
L0:
%R12 = load i32* %R11
%R13 = load i32* %R1
%R14 = icmp sle i32 %R12, %R13
br i1 %R14, label %L1, label %L2
L1:
%R16 = load i32* %R11
%R17 = load i8** %R9
%R15 = call i32 @readInt ()
call void @setArrayItemInt(i8* %R17, i32 %R16, i32 %R15)
%R18 = load i32* %R11
%R19 = add i32 0, 1
%R20 = add i32 %R18, %R19
store i32 %R20, i32* %R11
br label %L0
L2:
%R21 = add i32 0, 0
%R22 = alloca i32
store i32 %R21, i32* %R22
%R23 = add i32 0, 0
%R24 = alloca i32
store i32 %R23, i32* %R24
br label %L3
L3:
%R25 = load i32* %R24
%R26 = load i32* %R1
%R27 = icmp sle i32 %R25, %R26
br i1 %R27, label %L4, label %L11
L4:
%R28 = load i32* %R24
%R29 = add i32 0, 1
%R30 = add i32 %R28, %R29
%R31 = alloca i32
store i32 %R30, i32* %R31
br label %L5
L5:
%R32 = load i32* %R31
%R33 = load i32* %R1
%R34 = icmp sle i32 %R32, %R33
br i1 %R34, label %L6, label %L10
L6:
%R35 = load i32* %R24
%R36 = load i8** %R9
%R37 = call i32 @getArrayItemInt(i8* %R36, i32 %R35)
%R38 = load i32* %R31
%R39 = load i8** %R9
%R40 = call i32 @getArrayItemInt(i8* %R39, i32 %R38)
%R41 = icmp sgt i32 %R37, %R40
%R53 = icmp ne i1 %R41, 0
br i1 %R53, label %L8, label %L9
L8:
%R42 = load i32* %R24
%R43 = load i8** %R9
%R44 = call i32 @getArrayItemInt(i8* %R43, i32 %R42)
store i32 %R44, i32* %R22
%R48 = load i32* %R24
%R49 = load i8** %R9
%R45 = load i32* %R31
%R46 = load i8** %R9
%R47 = call i32 @getArrayItemInt(i8* %R46, i32 %R45)
call void @setArrayItemInt(i8* %R49, i32 %R48, i32 %R47)
%R51 = load i32* %R31
%R52 = load i8** %R9
%R50 = load i32* %R22
call void @setArrayItemInt(i8* %R52, i32 %R51, i32 %R50)
br label %L7
L9:
br label %L7
L7:
%R54 = add i32 0, 0
%R55 = load i32* %R31
%R56 = add i32 0, 1
%R57 = add i32 %R55, %R56
store i32 %R57, i32* %R31
br label %L5
L10:
%R58 = load i32* %R24
%R59 = add i32 0, 1
%R60 = add i32 %R58, %R59
store i32 %R60, i32* %R24
br label %L3
L11:
%R61 = add i32 0, 0
%R62 = alloca i32
store i32 %R61, i32* %R62
br label %L12
L12:
%R63 = load i32* %R62
%R64 = load i32* %R1
%R65 = icmp sle i32 %R63, %R64
br i1 %R65, label %L13, label %L14
L13:
%R66 = load i32* %R62
%R67 = load i8** %R9
%R68 = call i32 @getArrayItemInt(i8* %R67, i32 %R66)
call i32 @printInt (i32 %R68)
%R69 = load i32* %R62
%R70 = add i32 0, 1
%R71 = add i32 %R69, %R70
store i32 %R71, i32* %R62
br label %L12
L14:
ret i32 0
}
