Documentation bits and parts

-stealing stuff from compilervisitor

-swap on operator - assignment always done into "left" container, swap specifies that containers should be switched before assignment

-pri pretypovani (scitanie, nasobenie) treba vzdy pridat llvm if a zapamatat si novy register

-inty citane ako stringy, vzdy prehnane cez generateIntContainer

-v MEM si treba pamatat aj TYP REGISTRA (iXY) !!!

-premenne su polia, polia su 2d polia atd 

-stringy su tym padom iba obycajne premenne a nie polia!

















#### TRASH BEGINS BELOW #######

; Function Attrs: nounwind
define i8* @generate(i32 %x, i32* %maxsize) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 4
  %poc = alloca i32, align 4
  %newaddress = alloca i8*, align 4
  %neweradress = alloca i8*, align 4
  store i32 %x, i32* %1, align 4
  store i32* %maxsize, i32** %2, align 4
  store i32 0, i32* %poc, align 4
  %3 = load i32** %2, align 4
  %4 = load i32* %3, align 4
  %5 = mul nsw i32 8, %4
  %6 = call noalias i8* @malloc(i32 %5) #1
  store i8* %6, i8** %newaddress, align 4
  br label %7

; <label>:7                                       ; preds = %47, %0
  %8 = load i32* %1, align 4
  %9 = sdiv i32 %8, 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %48

; <label>:11                                      ; preds = %7
  %12 = load i32* %1, align 4
  %13 = srem i32 %12, 8
  %14 = trunc i32 %13 to i8
  %15 = load i32* %poc, align 4
  %16 = load i8** %newaddress, align 4
  %17 = getelementptr inbounds i8* %16, i32 %15
  store i8 %14, i8* %17, align 1
  %18 = load i32* %1, align 4
  %19 = sdiv i32 %18, 8
  store i32 %19, i32* %1, align 4
  %20 = load i32* %poc, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %poc, align 4
  %22 = load i32* %poc, align 4
  %23 = load i32** %2, align 4
  %24 = load i32* %23, align 4
  %25 = sub nsw i32 %24, 1
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %27, label %41

; <label>:27                                      ; preds = %11
  %28 = load i32** %2, align 4
  %29 = load i32* %28, align 4
  %30 = mul nsw i32 16, %29
  %31 = call noalias i8* @malloc(i32 %30) #1
  store i8* %31, i8** %neweradress, align 4
  %32 = load i8** %neweradress, align 4
  %33 = load i8** %newaddress, align 4
  %34 = load i32** %2, align 4
  %35 = load i32* %34, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 %35, i32 1, i1 false)
  %36 = load i8** %newaddress, align 4
  call void @free(i8* %36) #1
  %37 = load i8** %neweradress, align 4
  store i8* %37, i8** %newaddress, align 4
  %38 = load i32** %2, align 4
  %39 = load i32* %38, align 4
  %40 = mul nsw i32 %39, 2
  store i32 %40, i32* %38, align 4
  br label %41

; <label>:41                                      ; preds = %27, %11
  %42 = load i32** %2, align 4
  %43 = load i32* %42, align 4
  %44 = icmp sge i32 %43, 8388608
  br i1 %44, label %45, label %47

; <label>:45                                      ; preds = %41
  %46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 1) #4
  unreachable

; <label>:47                                      ; preds = %41
  br label %7

; <label>:48                                      ; preds = %7
  %49 = load i32* %poc, align 4
  %50 = load i8** %newaddress, align 4
  %51 = getelementptr inbounds i8* %50, i32 %49
  store i8 0, i8* %51, align 1
  %52 = load i32* %poc, align 4
  %53 = load i32** %2, align 4
  store i32 %52, i32* %53, align 4
  %54 = load i8** %newaddress, align 4
  ret i8* %54
}



define i8* @generate(i32 %x, i32* %maxsize) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 4
  %poc = alloca i32, align 4
  %newaddress = alloca i8*, align 4
  %neweradress = alloca i8*, align 4
  store i32 %x, i32* %1, align 4
  store i32* %maxsize, i32** %2, align 4
  store i32 0, i32* %poc, align 4
  %3 = load i32** %2, align 4
  %4 = load i32* %3, align 4
  %5 = mul nsw i32 8, %4
  %6 = call noalias i8* @malloc(i32 %5) #1
  store i8* %6, i8** %newaddress, align 4
  br label %7

; <label>:7                                       ; preds = %47, %0
  %8 = load i32* %1, align 4
  %9 = sdiv i32 %8, 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %48

; <label>:11                                      ; preds = %7
  %12 = load i32* %1, align 4
  %13 = srem i32 %12, 8
  %14 = trunc i32 %13 to i8
  %15 = load i32* %poc, align 4
  %16 = load i8** %newaddress, align 4
  %17 = getelementptr inbounds i8* %16, i32 %15
  store i8 %14, i8* %17, align 1
  %18 = load i32* %1, align 4
  %19 = sdiv i32 %18, 8
  store i32 %19, i32* %1, align 4
  %20 = load i32* %poc, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %poc, align 4
  %22 = load i32* %poc, align 4
  %23 = load i32** %2, align 4
  %24 = load i32* %23, align 4
  %25 = sub nsw i32 %24, 1
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %27, label %41

; <label>:27                                      ; preds = %11
  %28 = load i32** %2, align 4
  %29 = load i32* %28, align 4
  %30 = mul nsw i32 16, %29
  %31 = call noalias i8* @malloc(i32 %30) #1
  store i8* %31, i8** %neweradress, align 4
  %32 = load i8** %neweradress, align 4
  %33 = load i8** %newaddress, align 4
  %34 = load i32** %2, align 4
  %35 = load i32* %34, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 %35, i32 1, i1 false)
  %36 = load i8** %newaddress, align 4
  call void @free(i8* %36) #1
  %37 = load i8** %neweradress, align 4
  store i8* %37, i8** %newaddress, align 4
  %38 = load i32** %2, align 4
  %39 = load i32* %38, align 4
  %40 = mul nsw i32 %39, 2
  store i32 %40, i32* %38, align 4
  br label %41

; <label>:41                                      ; preds = %27, %11
  %42 = load i32** %2, align 4
  %43 = load i32* %42, align 4
  %44 = icmp sge i32 %43, 8388608
  br i1 %44, label %45, label %47

; <label>:45                                      ; preds = %41
  %46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 1) #4
  unreachable

; <label>:47                                      ; preds = %41
  br label %7

; <label>:48                                      ; preds = %7
  %49 = load i32* %poc, align 4
  %50 = load i8** %newaddress, align 4
  %51 = getelementptr inbounds i8* %50, i32 %49
  store i8 0, i8* %51, align 1
  %52 = load i8** %newaddress, align 4
  ret i8* %52
}


#############OLD BUTT GOLD###############

define i8* @generate(i32 %x) #0 {
  %1 = alloca i32, align 4
  %maxsize = alloca i32, align 4
  %poc = alloca i32, align 4
  %newaddress = alloca i8*, align 4
  %neweradress = alloca i8*, align 4
  store i32 %x, i32* %1, align 4
  store i32 64, i32* %maxsize, align 4
  store i32 0, i32* %poc, align 4
  %2 = load i32* %maxsize, align 4
  %3 = mul nsw i32 8, %2
  %4 = call noalias i8* @malloc(i32 %3) #1
  store i8* %4, i8** %newaddress, align 4
  br label %5

; <label>:5                                       ; preds = %33, %0
  %6 = load i32* %1, align 4
  %7 = sdiv i32 %6, 2
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %34

; <label>:9                                       ; preds = %5
  %10 = load i32* %1, align 4
  %11 = sdiv i32 %10, 2
  store i32 %11, i32* %1, align 4
  %12 = load i32* %poc, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %poc, align 4
  %14 = load i32* %poc, align 4
  %15 = load i32* %maxsize, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %28

; <label>:17                                      ; preds = %9
  %18 = load i32* %maxsize, align 4
  %19 = mul nsw i32 16, %18
  %20 = call noalias i8* @malloc(i32 %19) #1
  store i8* %20, i8** %neweradress, align 4
  %21 = load i8** %neweradress, align 4
  %22 = load i8** %newaddress, align 4
  %23 = load i32* %maxsize, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %21, i8* %22, i32 %23, i32 1, i1 false)
  %24 = load i8** %newaddress, align 4
  call void @free(i8* %24) #1
  %25 = load i8** %neweradress, align 4
  store i8* %25, i8** %newaddress, align 4
  %26 = load i32* %maxsize, align 4
  %27 = mul nsw i32 %26, 2
  store i32 %27, i32* %maxsize, align 4
  br label %28

; <label>:28                                      ; preds = %17, %9
  %29 = load i32* %maxsize, align 4
  %30 = icmp sge i32 %29, 8388608
  br i1 %30, label %31, label %33

; <label>:31                                      ; preds = %28
  %32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 1) #4
  unreachable

; <label>:33                                      ; preds = %28
  br label %5

; <label>:34                                      ; preds = %5
  %35 = load i8** %newaddress, align 4
  ret i8* %35
}